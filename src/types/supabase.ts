// Supabase Database Types
// This file will be generated by Supabase CLI in production

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export type Database = {
  public: {
    Tables: {
      check_ins: {
        Row: {
          comment: string | null
          companion_type: string | null
          context: Json | null
          created_at: string | null
          id: string
          meal_type: string | null
          notes: string | null
          photos: string[] | null
          place_id: string | null
          rating: string | null
          tags: string[] | null
          timestamp: string | null
          transportation_method: string | null
          updated_at: string | null
          user_id: string | null
          visit_duration: number | null
          weather_context: Json | null
          would_return: boolean | null
        }
        Insert: {
          comment?: string | null
          companion_type?: string | null
          context?: Json | null
          created_at?: string | null
          id?: string
          meal_type?: string | null
          notes?: string | null
          photos?: string[] | null
          place_id?: string | null
          rating?: string | null
          tags?: string[] | null
          timestamp?: string | null
          transportation_method?: string | null
          updated_at?: string | null
          user_id?: string | null
          visit_duration?: number | null
          weather_context?: Json | null
          would_return?: boolean | null
        }
        Update: {
          comment?: string | null
          companion_type?: string | null
          context?: Json | null
          created_at?: string | null
          id?: string
          meal_type?: string | null
          notes?: string | null
          photos?: string[] | null
          place_id?: string | null
          rating?: string | null
          tags?: string[] | null
          timestamp?: string | null
          transportation_method?: string | null
          updated_at?: string | null
          user_id?: string | null
          visit_duration?: number | null
          weather_context?: Json | null
          would_return?: boolean | null
        }
        Relationships: [
          {
            foreignKeyName: "check_ins_place_id_fkey"
            columns: ["place_id"]
            isOneToOne: false
            referencedRelation: "places"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "check_ins_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      lists: {
        Row: {
          auto_generated: boolean | null
          color: string | null
          created_at: string | null
          curator_priority: number | null
          description: string | null
          external_link: string | null
          icon: string | null
          id: string
          is_curated: boolean | null
          is_default: boolean | null
          list_type: string | null
          location_scope: string | null
          name: string

          publisher_logo_url: string | null
          publisher_name: string | null
          type: string | null
          user_id: string | null
          visibility: string | null
        }
        Insert: {
          auto_generated?: boolean | null
          color?: string | null
          created_at?: string | null
          curator_priority?: number | null
          description?: string | null
          external_link?: string | null
          icon?: string | null
          id?: string
          is_curated?: boolean | null
          is_default?: boolean | null
          list_type?: string | null
          location_scope?: string | null
          name: string
          publisher_logo_url?: string | null
          publisher_name?: string | null
          type?: string | null
          user_id?: string | null
          visibility?: string | null
        }
        Update: {
          auto_generated?: boolean | null
          color?: string | null
          created_at?: string | null
          curator_priority?: number | null
          description?: string | null
          external_link?: string | null
          icon?: string | null
          id?: string
          is_curated?: boolean | null
          is_default?: boolean | null
          list_type?: string | null
          location_scope?: string | null
          name?: string
          publisher_logo_url?: string | null
          publisher_name?: string | null
          type?: string | null
          user_id?: string | null
          visibility?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "lists_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      users: {
        Row: {
          id: string;
          email: string;
          name: string;
          avatar_url?: string;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          email: string;
          name: string;
          avatar_url?: string;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          email?: string;
          name?: string;
          avatar_url?: string;
          updated_at?: string;
        };
      };
      places: {
        Row: {
          id: string;
          name: string;
          type: string;
          description?: string;
          address?: string;
          latitude: number;
          longitude: number;
          rating?: number;
          price_level?: number;
          bts_station?: string;
          is_open?: boolean;
          opening_hours?: string;
          phone?: string;
          website?: string;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          name: string;
          type: string;
          description?: string;
          address?: string;
          latitude: number;
          longitude: number;
          rating?: number;
          price_level?: number;
          bts_station?: string;
          is_open?: boolean;
          opening_hours?: string;
          phone?: string;
          website?: string;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          name?: string;
          type?: string;
          description?: string;
          address?: string;
          latitude?: number;
          longitude?: number;
          rating?: number;
          price_level?: number;
          bts_station?: string;
          is_open?: boolean;
          opening_hours?: string;
          phone?: string;
          website?: string;
          updated_at?: string;
        };
      };
      checkins: {
        Row: {
          id: string;
          user_id: string;
          place_id: string;
          rating?: number;
          notes?: string;
          photo_count: number;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          user_id: string;
          place_id: string;
          rating?: number;
          notes?: string;
          photo_count?: number;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          user_id?: string;
          place_id?: string;
          rating?: number;
          notes?: string;
          photo_count?: number;
          updated_at?: string;
        };
      };
      list_places: {
        Row: {
          id: string;
          list_id: string;
          place_id: string;
          added_at: string;
        };
        Insert: {
          id?: string;
          list_id: string;
          place_id: string;
          added_at?: string;
        };
        Update: {
          id?: string;
          list_id?: string;
          place_id?: string;
        };
      };
    };
    Views: {
      [_ in never]: never;
    };
    Functions: {
      [_ in never]: never;
    };
    Enums: {
      place_type: 'restaurant' | 'cafe' | 'shopping' | 'temple' | 'park' | 'hotel' | 'attraction';
      list_type: 'favorites' | 'coffee' | 'date' | 'work' | 'want_to_try' | 'visited' | 'rated' | 'recent';
    };
  };
}

// Helper types for working with the database
export type Tables<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Row']
export type TablesInsert<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Insert']
export type TablesUpdate<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Update'] 